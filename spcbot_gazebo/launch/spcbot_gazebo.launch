<?xml version="1.0"?>

<launch>
  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find spcbot_gazebo)/worlds/home2.world"/> 
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="recording" value="false"/>
    <arg name="debug" value="false"/>
  </include>

    <!-- Convert an xacro and put on parameter server -->
    <param name="robot_description" command="$(find xacro)/xacro.py $(find spcbot_description)/urdf/spcbot.xacro" />

    <!-- Spawn a robot into Gazebo -->
    <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model"  output="screen"
    args="-param robot_description -urdf -model m2wr" />
   
    <include file="$(find spcbot_gazebo)/launch/gmapping.launch" />
    
    <!-- <node pkg="move_base" type="move_base" name="move_base" output="screen">
        <param name="controller_frequency" value="10.0"/>
        <rosparam file="$(find spcbot_gazebo)/param/costmap_common_params.yaml" command="load" ns="global_costmap" />
        <rosparam file="$(find spcbot_gazebo)/param/costmap_common_params.yaml" command="load" ns="local_costmap" />
        <rosparam file="$(find spcbot_gazebo)/param/local_costmap_params.yaml" command="load" />
        <rosparam file="$(find spcbot_gazebo)/param/global_costmap_params.yaml" command="load" />
        <rosparam file="$(find spcbot_gazebo)/param/trajectory_planner.yaml" command="load" />
    </node> -->

   

       

</launch>
